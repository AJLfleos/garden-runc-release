#!/usr/bin/env bash
set -uo pipefail

if grep -q garden_start /proc/1/cmdline; then
  echo "ordnance-survey needs to be run outside the BPM Container "
  exit 1
fi

if [[ "$(whoami)" != "root" ]]; then
  echo "ordnance-survey needs to be run as root" 1>&2
  exit 1
fi

export TMPDIR=/tmp
tmp_dir=$(mktemp -d -t tmp.XXXXXXXXXX)
os_report_dir="${tmp_dir}/os-report"
mkdir -p "$os_report_dir"

echo "Running ordnance-survey. This may take up to 2 minutes do not interrupt."
(
cd $os_report_dir
hostname > hostname.log
date > date.log
ps aux --forest > forest.log
ps -eLo pid,tid,ppid,user:11,comm,state,wchan:35,lstart > ps-info.log
free -mth > free.log
uname -a > uname.log
uptime > uptime.log
df -h > df.log
dmesg -T > dmesg.log
ifconfig > ifconfig.log
iptables -L > iptables-L.log
iptables -tnat -L > iptables-tnat.log
cat /proc/$(pidof gdn)/mountinfo > mountinfo.log
/var/vcap/packages/guardian/bin/gdn -v > gdn-version.log || true
find /var/vcap/data/garden/depot | sed 's|[^/]*/|- |g' > depot-contents.log
ls /var/vcap/data/garden/depot/ | wc -w > num-containers.log
timeout -s SIGSTOP 5 lsof 2>/dev/null | wc -l > num-open-files.log
timeout -s SIGSTOP 5 lsof > lsof.log
xfs_db -r -c "frag -f" /var/vcap/data/grootfs/store/unprivileged.backing-store > xfs-frag.log
xfs_info /var/vcap/data/grootfs/store/unprivileged > xfs-info.log
cat /proc/sys/fs/file-max > file-max.log
monit summary > monit-summary.log
ss -amp > sockets.log
timeout -s SIGSTOP 17 iostat -x -d -m 5 3 > iostat.log
cat /proc/slabinfo > slabinfo.log
cat /proc/meminfo > meminfo.log
timeout -s SIGSTOP 2 vmstat -s > vmstat-s.log
timeout -s SIGSTOP 17 vmstat -d 5 3 > vmstat-d.log
timeout -s SIGSTOP 17 vmstat -a 5 3 > vmstat-a.log

for p in $(ps -eLo pid | awk 'NR>1'); do
  mkdir -p "process-data/$p"
  ls -lah "/proc/$p/fd" > "process-data/$p/fd" 2>/dev/null
  ls -lah "/proc/$p/ns" > "process-data/$p/ns" 2>/dev/null
  cat "/proc/$p/cgroup" > "process-data/$p/cgroup" 2>/dev/null
  cat "/proc/$p/status" > "process-data/$p/status" 2>/dev/null
  timeout -s SIGSTOP 5 cat "/proc/$p/stack" > "process-data/$p/stack" 2>/dev/null
done
tar czf process-data.tgz process-data && rm -rf process-data


mkdir kernlogs && cp /var/log/kern.log* kernlogs && tar czf kernlog.tgz kernlogs && rm -rf kernlogs
mkdir monitlogs && cp /var/vcap/monit/monit.log* monitlogs && tar czf monitlogs.tgz monitlogs && rm -rf monitlogs
mkdir syslogs && cp /var/log/syslog* syslogs && tar czf syslogs.tgz syslogs && rm -rf syslogs
cp /var/vcap/jobs/garden/config/config.ini . || true
cp -r /var/vcap/sys/log/garden garden-logs && tar czf garden-logs.tgz garden-logs && rm -rf garden-logs
)

filename="$(hostname)_$(date '+%F-%H-%M-%S')"
if tar zcf "$TMPDIR/os-report-$filename.tar.gz" -C $tmp_dir .; then
  rm -rf $tmp_dir
  echo "archive created: $TMPDIR/os-report-$filename.tar.gz"
else
  echo "failed to create os-report tar, collected information can still be found at $tmp_dir/os-report"
fi
