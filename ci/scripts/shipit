#!/usr/bin/env bash
set -euo pipefail

base=$PWD

# shellcheck source=../helpers/gdn-version
source "$( dirname "$0" )/../helpers/gdn-version"

GARDEN_VERSION=$(cat "$base"/gr-version/number)
if [ -z "${GARDEN_VERSION:-}" ]; then
  echo "missing garden version number"
  exit 1
fi

cp "$base"/garden-ci/config/private.yml "$base"/gr-release-develop/config/private.yml

CANDIDATE_DIR=$base/gr-candidate-tarball

(
cd gr-release-develop
git config --global user.email "ci@localhost"
git config --global user.name "CI Bot"

RELEASE_YML=$PWD/releases/garden-runc/garden-runc-${GARDEN_VERSION}.yml
tarball_path="$base/final-release/garden-runc-${GARDEN_VERSION}.tgz"

if [ -e "$RELEASE_YML" ]; then
  echo "release already created; making tarball..."

  # If you want to fly execute this, you will have to pass DEV_MODE=true
  if [ -z "$DEV_MODE" ]; then
    ensure_release_is_clean "$PWD"
    create_gdn_version_file "$PWD"
  fi

  bosh -n create-release --force --sha2 --tarball="$tarball_path" "$RELEASE_YML"
else
  echo "finalizing release"
  bosh -n finalize-release --sha2 --version "$GARDEN_VERSION" "${CANDIDATE_DIR}"/garden-runc-*.tgz
  mv "${CANDIDATE_DIR}"/garden-runc-*.tgz "${tarball_path}"
  git add -A
  git commit -m "release v${GARDEN_VERSION}"
fi

cp -r . ../release/master
)

# prepare github release
mv gdn-linux-release/gdn "github-release/gdn-${GARDEN_VERSION}"
