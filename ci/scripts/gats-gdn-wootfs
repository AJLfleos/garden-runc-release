#!/bin/bash
# vim: set ft=sh

# *** HOWTO run ***
# fly -t garden-ci e -c ci/build-gdn-linux.yml -i gr-release-develop=. -o binary=.
# fly -t garden-ci e -p -c ci/gats-gdn-wootfs.yml -i gr-release-develop=. -i gdn-linux-release=. -i wooter=$HOME/go/src/github.com/julz/wooter
# *****************

set -e -x

mkdir go

export GOROOT=/usr/local/go
export GOPATH=$PWD/go
export PATH=$GOPATH/bin:$PATH

mkdir -p "$GOPATH/src/github.com/julz"
cp -R wooter "$GOPATH/src/github.com/julz"
pushd "$GOPATH/src/github.com/julz/wooter"
  go get ./...
  go build -o wootfs cmd/wootfs/main.go
popd

WOOTER_BASE="$GOPATH/src/github.com/julz/wooter"
WOOTFS_BIN_PATH=$WOOTER_BASE/wootfs
WOOTFS_CONFIG_PATH=$WOOTER_BASE/wootfs.yml

cat << EOF >> "$WOOTFS_CONFIG_PATH"
---
log_level: debug
EOF

export GARDEN_ADDRESS
GARDEN_ADDRESS="$( hostname )"
export GARDEN_IP=0.0.0.0
export GARDEN_PORT=7777
export GARDEN_DEBUG_PORT=17013

GDN_PATH=gdn-linux-release/gdn
chmod 755 "$GDN_PATH"

source gr-release-develop/ci/scripts/device-control

tmpdir=/tmp/dir
rm -fr $tmpdir
mkdir $tmpdir
mount -t tmpfs none $tmpdir

permit_device_control
create_loop_devices 256

$GDN_PATH \
  server \
  --depot=$tmpdir/depot \
  --graph=$tmpdir/graph \
  --bind-ip=$GARDEN_IP \
  --bind-port=$GARDEN_PORT \
  --debug-bind-ip=$GARDEN_IP \
  --debug-bind-port=$GARDEN_DEBUG_PORT \
  --network-pool=10.254.1.0/24 \
  --log-level="$LOG_LEVEL" \
  --image-plugin="$WOOTFS_BIN_PATH" \
  --image-plugin-extra-arg="--config" \
  --image-plugin-extra-arg="$WOOTFS_CONFIG_PATH" \
  --privileged-image-plugin="$WOOTFS_BIN_PATH" \
  --privileged-image-plugin-extra-arg="--config" \
  --privileged-image-plugin-extra-arg="$WOOTFS_CONFIG_PATH" \
  --privileged-image-plugin-extra-arg="--privileged" \
  --default-rootfs=/opt/warden/rootfs.tar &

# wait for server to start up
# and then curl to confirm that it is
sleep 5
curl "${GARDEN_ADDRESS}:${GARDEN_PORT}/ping"

export GOPATH="$PWD/gr-release-develop"
export NESTED=true
export WOOT=true

# do not parallelize tests because wooter plugin writes to shared folder
pushd gr-release-develop/src/code.cloudfoundry.org/garden-integration-tests
  cmd="ginkgo -failOnPending -randomizeSuites -randomizeAllSpecs $*"
  if [ -n "${SLOW_MOBIUS_TIME_LIMIT_SECONDS:-}" ]; then
    cmd="gr-release-develop/ci/scripts/slowmobius $cmd"
  fi

  $cmd
popd
