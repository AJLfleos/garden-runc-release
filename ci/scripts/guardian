#!/usr/bin/env bash
set -ex

release=$PWD/release

# shellcheck source=../helpers/device-control
source "$release/ci/helpers/device-control"

# shellcheck source=../../src/build/runc.bash
source "$release/src/build/runc.bash"
# shellcheck source=../../src/build/grootfs.bash
source "$release/src/build/grootfs.bash"

export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$PATH

export GOPATH="${release}/src/gopath"
export PATH=$HOME/go/bin:$GOPATH/bin:$PATH

# This is work around --buildvcs issues in Go 1.18+
git config --global --add safe.directory '*'

(
# Using patch instead of `git apply` to keep this path working with `fly
# execute`, which does not preserve the `.git` dir.
cd "${release}/src/gopath/src/github.com/opencontainers/runc"
patch < "${release}/ci/runc-patches/0001-remove-delete-timeout.patch"
)

mkdir -p "${GOPATH}/bin"
build_runc "$release" "${GOPATH}/bin"
build_grootfs "$release" "${GOPATH}/bin"

if [[ "$CONTAINERD_ENABLED" == "true" ]] ; then
  #TODO: Figure out how to get rid of the containerd git-related errors below
  echo -e "=========================================\n\n\n\nDuring containerd compilation you will get git fatals that complain of containerd directory not being a git repository. You can safely ignore them :)\n\n\n\n========================================="
  pushd "$release"/src/gopath/src/github.com/containerd/containerd
    BUILDTAGS=no_btrfs make && make install
  popd
fi

# Set up AppArmor
if ! grep securityfs /proc/self/mounts > /dev/null 2>&1 ; then
  mount -t securityfs securityfs /sys/kernel/security
fi
apparmor_parser -r /opt/static-assets/garden-default

export GARDEN_TEST_ROOTFS=/opt/warden/rootfs.tar
export GARDEN_FUSE_TEST_ROOTFS=/opt/warden/fuse-rootfs.tar
export GARDEN_TAR_PATH="$PWD/tar-out/tar"
export GARDEN_TEST_GRAPHPATH=/tmp/aufs_mount
export GARDEN_DOCKER_REGISTRY_V2_TEST_ROOTFS=/opt/warden/docker-registry-v2-rootfs.tar

permit_device_control
create_loop_devices 256

go version
go install github.com/onsi/ginkgo/ginkgo@latest

echo "compiling test process: $(date)"

cd "$release"/src/guardian

if [ -z "${NO_GO_VET:-}" ]; then
  go vet -mod vendor ./...
fi

ginkgo -mod vendor -tags daemon -r -p --keepGoing --nodes=${GINKGO_NODES:-8} --failOnPending --randomizeSuites --randomizeAllSpecs -debug --race $*
