#!/bin/bash
# vim: set ft=sh
set -ex

source $(dirname $0)/aufs

base=$PWD

cd "$(dirname "$0")/../.."

export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$PATH

export GOPATH=$PWD
export PATH=$GOPATH/bin:$PATH

pushd src/github.com/opencontainers/runc
  go build -tags "seccomp apparmor" --ldflags '-extldflags "-static"' -o runc .
  mv runc /usr/local/bin/runc
popd

mkdir -p /var/run/oci
mount -t tmpfs tmpfs /var/run/oci

# Set up AppArmor
mount -t securityfs securityfs /sys/kernel/security
if ! aa-status | grep garden-default > /dev/null; then
  apparmor_parser -a ci/assets/garden-default
fi

cd src/code.cloudfoundry.org/guardian

export GARDEN_TEST_ROOTFS=/opt/warden/rootfs.tar
export GARDEN_FUSE_TEST_ROOTFS=/opt/warden/fuse-rootfs.tar
export GARDEN_NESTABLE_TEST_ROOTFS=/opt/warden/nestable-rootfs.tar
export GARDEN_TAR_PATH=/opt/static-assets/tar/bin/tar
export GARDEN_TEST_GRAPHPATH=/tmp/aufs_mount
export GARDEN_DORA_PATH=$PWD/../garden-integration-tests/resources/dora.tgz.tar
export GARDEN_DOCKER_REGISTRY_V2_TEST_ROOTFS=/opt/warden/docker-registry-v2-rootfs.tar

permit_device_control
create_loop_devices 256

go version
go vet ./...
echo "compiling test process: $(date)"

cmd="ginkgo -tags daemon -r -p -keepGoing -nodes=8 -failOnPending -randomizeSuites -randomizeAllSpecs"
if [ -n "${RACE_DETECTION:-}" ]; then
  cmd="$cmd -race"
fi
cmd="$cmd $*"

if [ -n "${SLOW_MOBIUS_TIME_LIMIT_SECONDS:-}" ]; then
  cmd="$base/gr-release-develop/ci/scripts/slowmobius $cmd"
fi

$cmd
