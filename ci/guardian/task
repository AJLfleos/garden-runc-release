#!/usr/bin/env bash
set -eux

release=$PWD/release

export BINARIES="${release}/src/gopath"
export PATH=$HOME/go/bin:${BINARIES}/bin:$PATH

# This is work around --buildvcs issues in Go 1.18+
git config --global --add safe.directory '*'

function build() {
  # shellcheck source=../helpers/build-binaries.bash
  source "$release/ci/helpers/build-binaries.bash"

  mkdir -p "${BINARIES}/bin"
  build_runc "$release" "${BINARIES}/bin"
  build_grootfs "$release" "${BINARIES}/bin"

  if [[ "$CONTAINERD_ENABLED" == "true" ]] ; then
    build_containerd "$release" "${BINARIES}/bin"
  fi
}

function prepare() {
  # shellcheck source=../helpers/device-control.bash
  source "$release/ci/helpers/device-control.bash"
  permit_device_control
  create_loop_devices 256
  # Set up AppArmor
  if ! grep securityfs /proc/self/mounts > /dev/null 2>&1 ; then
    mount -t securityfs securityfs /sys/kernel/security
  fi
  apparmor_parser -r /opt/static-assets/garden-default

}

function test() {
  #rootfses required in tests
  export GARDEN_TEST_ROOTFS=/opt/warden/rootfs.tar
  export GARDEN_FUSE_TEST_ROOTFS=/opt/warden/fuse-rootfs.tar
  export GARDEN_DOCKER_REGISTRY_V2_TEST_ROOTFS=/opt/warden/docker-registry-v2-rootfs.tar

  # binaries required for running tests
  export GARDEN_TAR_PATH="$PWD/tar-out/tar"
  export BINARIES="${BINARIES}"

  # Test combinations
  export CONTAINERD_ENABLED="${CONTAINERD_ENABLED}"
  export CONTAINERD_FOR_PROCESSES_ENABLED="${CONTAINERD_FOR_PROCESSES_ENABLED}"
  export CPU_THROTTLING_ENABLED="${CPU_THROTTLING_ENABLED}"

  go version

  cd "${release}/src/guardian"

  go vet ./...
  ginkgo -tags daemon -r -p --keepGoing --nodes=${GINKGO_NODES} --failOnPending --randomizeSuites --randomizeAllSpecs -debug --race $*
}

build
prepare
test "$*"
