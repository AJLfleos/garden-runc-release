# copied from https://github.com/concourse/concourse/blob/f4b40a18b94ed816cea7dfba20ad365bb566483b/jobs/baggageclaim/templates/baggageclaim_ctl.erb#L23-L54
# # break out of bosh-lite device limitations
function permit_device_control() {
  local devices_mount_info=$(cat /proc/self/cgroup | grep devices)

  if [ -z "$devices_mount_info" ]; then
    # cgroups not set up; must not be in a container
    return
  fi

  local devices_subsytems=$(echo $devices_mount_info | cut -d: -f2)
  local devices_subdir=$(echo $devices_mount_info | cut -d: -f3)

  if [ "$devices_subdir" = "/" ]; then
    # we're in the root devices cgroup; must not be in a container
    return
  fi

  if [ ! -e /tmp/devices-cgroup ]; then
    # mount our container's devices subsystem somewhere
    mkdir /tmp/devices-cgroup
    mount -t cgroup -o $devices_subsytems none /tmp/devices-cgroup
  fi

  # permit our cgroup to do everything with all devices
  echo a > /tmp/devices-cgroup${devices_subdir}/devices.allow || true

  umount /tmp/devices-cgroup || true
}

function create_loop_devices() {
  amt=$1
  for i in $(seq 0 $amt); do
    mknod -m 0660 /dev/loop$i b 7 $i || true
  done
}

function load_apparmor_profile() {
  local profile_path=$1
  export PATH=$PATH:$(readlink -nf /var/vcap/packages/apparmor/bin)

  if ! mountpoint -q /sys/kernel/security; then
    mount -t securityfs securityfs /sys/kernel/security
  fi

  apparmor_parser -r "$profile_path"
}

